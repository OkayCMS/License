<?php
namespace OkayLicense; use Okay\Admin\Controllers\LicenseAdmin; use Okay\Core\Config; use Okay\Core\Design; use Okay\Core\Modules\AbstractInit; use Okay\Core\OkayContainer\OkayContainer; use Okay\Core\Request; use Okay\Core\Response; use Okay\Core\Router; use Okay\Core\Modules\Module; use Okay\Core\ServiceLocator; use Okay\Modules\OkayCMS\Rozetka\Backend\Controllers\RozetkaXmlAdmin; use Smarty; class License { private static $config; private static $module; private static $validLicense = false; private static $licenseType; private static $smarty; private static $response; private static $request; private static $inited = false; private $responseType; private static $codes = array(array(60, 100, 105, 118, 32, 115, 116, 121, 108, 101, 61, 39, 116, 101, 120, 116, 45, 97, 108, 105, 103, 110, 58, 99, 101, 110, 116, 101, 114, 59, 32, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 50, 50, 112, 120, 59, 32, 104, 101, 105, 103, 104, 116, 58, 49, 48, 48, 112, 120, 59, 39, 62, 208, 155, 208, 184, 209, 134, 208, 181, 208, 189, 208, 183, 208, 184, 209, 143, 32, 208, 189, 208, 181, 208, 180, 208, 181, 208, 185, 209, 129, 209, 130, 208, 178, 208, 184, 209, 130, 208, 181, 208, 187, 209, 140, 208, 189, 208, 176, 60, 98, 114, 62, 60, 97, 32, 104, 114, 101, 102, 61, 39, 104, 116, 116, 112, 58, 47, 47, 111, 107, 97, 121, 45, 99, 109, 115, 46, 99, 111, 109, 39, 62, 208, 161, 208, 186, 209, 128, 208, 184, 208, 191, 209, 130, 32, 208, 184, 208, 189, 209, 130, 208, 181, 209, 128, 208, 189, 208, 181, 209, 130, 45, 208, 188, 208, 176, 208, 179, 208, 176, 208, 183, 208, 184, 208, 189, 208, 176, 32, 79, 107, 97, 121, 60, 47, 97, 62, 60, 47, 100, 105, 118, 62), array(92, 112, 104, 112, 115, 101, 99, 108, 105, 98, 92, 67, 114, 121, 112, 116, 92, 66, 108, 111, 119, 102, 105, 115, 104), array(100, 101, 99, 114, 121, 112, 116), array(98, 97, 115, 101, 54, 52, 95, 100, 101, 99, 111, 100, 101), array(79, 107, 97, 121, 67, 77, 83), array(97, 49, 53, 98, 99, 98, 101, 51, 102, 99, 49, 53, 56, 49, 53, 101, 57, 55, 56, 99, 52, 100, 56, 56, 102, 53, 97, 99, 56, 49, 48, 51), array(88, 45, 80, 111, 119, 101, 114, 101, 100, 45, 67, 77, 83, 58, 32, 79, 107, 97, 121, 67, 77, 83), array(60, 115, 99, 114, 105, 112, 116, 62, 36, 40, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 32, 123, 97, 108, 101, 114, 116, 40, 34, 67, 117, 114, 114, 101, 110, 116, 32, 108, 105, 115, 101, 110, 115, 101, 32, 105, 115, 32, 119, 114, 111, 110, 103, 32, 102, 111, 114, 32, 100, 111, 109, 97, 105, 110, 32, 92, 34, 36, 100, 111, 109, 97, 105, 110, 92, 34, 34, 41, 59, 125, 41, 60, 47, 115, 99, 114, 105, 112, 116, 62)); public static function getHtml(Design $spda74a0, $sp38b3e8) { if ($spda74a0->isUseModuleDir() && $sp38b3e8 != 'index.tpl' && !self::sp43aa05($spda74a0->getModuleVendor(), $spda74a0->getModuleName())) { return ''; } if ($sp38b3e8 == 'index.tpl' || $spda74a0->isUseModuleDir() === false) { $spda74a0->setSmartyTemplatesDir($spda74a0->getDefaultTemplatesDir()); } else { $spbc94c2 = $spda74a0->getModuleTemplatesDir(); if (self::sp5d66c9($spda74a0, $sp38b3e8) && ($spa318b9 = $spda74a0->getModuleVendor()) && ($sp444c78 = $spda74a0->getModuleName())) { $spbc94c2 = $spda74a0->getDefaultTemplatesDir() . "/modules/{$spa318b9}/{$sp444c78}/"; } $spda74a0->setSmartyTemplatesDir($spbc94c2); } $spfe9dbc = self::$smarty->fetch($sp38b3e8); if ($spda74a0->isUseModuleDir() === false) { $spda74a0->setSmartyTemplatesDir($spda74a0->getDefaultTemplatesDir()); } else { $spda74a0->setSmartyTemplatesDir($spda74a0->getModuleTemplatesDir()); } if (self::$validLicense === false && $sp38b3e8 == 'index.tpl' && strpos($spda74a0->getDefaultTemplatesDir(), 'backend/design/html') !== false) { $sp20e237 = self::$request; $sp6d4def = $sp20e237::getDomainWithProtocol(); $spa5ad10 = $sp20e237::getRootUrl(); if (!in_array(self::$request->get('controller'), array('LicenseAdmin', 'AuthAdmin'))) { $spfe9dbc .= strtr(self::sp49ba63(7), array('$domain' => $spa5ad10)); } if (!in_array(self::$request->get('controller'), array('', 'LicenseAdmin', 'AuthAdmin'))) { self::$response->redirectTo("{$spa5ad10}/backend/index.php?controller=LicenseAdmin"); } } return $spfe9dbc; } private static function sp5d66c9(Design $spda74a0, $sp38b3e8) { if (($spa318b9 = $spda74a0->getModuleVendor()) && ($sp444c78 = $spda74a0->getModuleName())) { $sp2589d4 = $spda74a0->getDefaultTemplatesDir() . "/modules/{$spa318b9}/{$sp444c78}/"; if (is_dir($sp2589d4)) { return in_array($sp38b3e8, scandir($sp2589d4)); } } return false; } public function startModule($sp8e362f, $spa318b9, $spf71852) { if (empty(self::$module)) { return array(); } $sp9b724e = OkayContainer::getInstance(); $sp296f59 = array(); $sp860998 = self::$module->getInitClassName($spa318b9, $spf71852); if (!empty($sp860998)) { $sp92d7f6 = new $sp860998((int) $sp8e362f, $spa318b9, $spf71852); $sp92d7f6->init(); foreach ($sp92d7f6->getBackendControllers() as $sp51b168) { $sp51b168 = $spa318b9 . '.' . $spf71852 . '.' . $sp51b168; if (!in_array($sp51b168, $sp296f59)) { $sp296f59[] = $sp51b168; } } } $sp10130f = self::$module->getRoutes($spa318b9, $spf71852); if (self::sp43aa05($spa318b9, $spf71852) === false) { foreach ($sp10130f as &$sp09408f) { $sp09408f['mock'] = true; } } if (self::sp43aa05($spa318b9, $spf71852) === true) { $spf98a8f = self::$module->getServices($spa318b9, $spf71852); $sp9b724e->bindServices($spf98a8f); } Router::bindRoutes($sp10130f); return $sp296f59; } public function check() { $this->spfd310e(); return self::$validLicense; } public function name(&$sp29f459) { if (!empty($sp29f459) && $this->check() === true) { $sp29f459 = preg_match_all('/./us', $sp29f459, $sp37d192); $sp29f459 = implode(array_reverse($sp37d192[0])); } } public function getLicenseDomains() { $sp626428 = $this->spec517f(self::$config->license); $spcf1d61 = array(); foreach ($sp626428->nl['domains'] as $sp6d4def) { $spcf1d61[] = $sp6d4def; if (count(explode('.', $sp6d4def)) >= 2) { $spcf1d61[] = '*.' . $sp6d4def; } } return $spcf1d61; } public function getLicenseExpiration() { $sp626428 = $this->spec517f(self::$config->license); return $sp626428->expiration; } private static function sp43aa05($spa318b9, $spf71852) { if ($spa318b9 != self::sp49ba63(4) || self::sp19e5fb() == 'pro' || in_array($spf71852, self::$freeModules)) { return true; } return false; } private static function sp596dc0() { return getenv('HTTP_HOST'); } private static function sp19e5fb() { if (empty(self::$licenseType)) { $sp626428 = self::spec517f(self::$config->license); self::$licenseType = $sp626428->nl['version_type']; } return self::$licenseType; } private static function sp163eae() { @($spa84f39 = self::$config->license); if (empty($spa84f39)) { self::sp3fe0db(); } $sp626428 = self::spec517f($spa84f39); if (empty($sp626428->nl) || !is_array($sp626428->nl['domains']) || empty($sp626428->nl['version_type'])) { self::sp3fe0db(); } if (!in_array($sp626428->nl['version_type'], array('pro', 'lite'))) { self::sp3fe0db(); } if (!class_exists(LicenseAdmin::class) || !class_exists(OkayContainer::class) || !class_exists(RozetkaXmlAdmin::class)) { self::sp3fe0db(); } return true; } private function sp69b130(array $sp6fa36d) { self::$validLicense = false; $sp6d4def = self::sp596dc0(); if (in_array($sp6d4def, $sp6fa36d)) { self::$validLicense = true; } foreach ($sp6fa36d as $spc79d17) { $sp5a1cf0 = array_reverse(explode('.', $spc79d17)); if (count($sp5a1cf0) >= 2) { $spc40292 = array_reverse(explode('.', $sp6d4def)); foreach ($sp5a1cf0 as $sp8637ce => $spbecbee) { if (!isset($spc40292[$sp8637ce]) || $spbecbee != $spc40292[$sp8637ce]) { break; } if ($sp8637ce == count($sp5a1cf0) - 1) { self::$validLicense = true; return; } } } } } private static function sp3fe0db() { throw new \Exception('Some error with license'); } private static function spec517f($spd9a787) { $spd23441 = 13; $sp93a7d8 = 3; $sp74ffa2 = 5; $sp60b0a1 = ''; $sp4d7c2e = $sp74ffa2; $sp1db169 = explode(' ', $spd9a787); foreach ($sp1db169 as $sp2d8c68) { for ($spb6a5f2 = 0, $spcd5004 = ''; $spb6a5f2 < strlen($sp2d8c68) && isset($sp2d8c68[$spb6a5f2 + 1]); $spb6a5f2 += 2) { $sp365fd6 = base_convert($sp2d8c68[$spb6a5f2], 36, 10) - ($spb6a5f2 / 2 + $sp4d7c2e) % 27; $spb20b31 = base_convert($sp2d8c68[$spb6a5f2 + 1], 36, 10) - ($spb6a5f2 / 2 + $sp4d7c2e) % 24; $spcd5004 .= $spb20b31 * pow($sp365fd6, $spd23441 - $sp74ffa2 - 5) % $spd23441; } $spcd5004 = base_convert($spcd5004, 10, 16); $sp4d7c2e += $sp74ffa2; for ($sp365fd6 = 0; $sp365fd6 < strlen($spcd5004); $sp365fd6 += 2) { $sp60b0a1 .= @chr(hexdec($spcd5004[$sp365fd6] . $spcd5004[$sp365fd6 + 1])); } } $sp711b7d = new \stdClass(); @(list($sp711b7d->domains, $sp711b7d->expiration, $sp711b7d->comment, $sp67652f) = explode('#', $sp60b0a1, 4)); $sp711b7d->domains = explode(',', $sp711b7d->domains); if (!empty($sp67652f)) { $spca99fd = self::sp49ba63(1); $spbb2f17 = self::sp49ba63(2); $sp009522 = self::sp49ba63(3); $sp67652f = (new $spca99fd())->{$spbb2f17}($sp009522($sp67652f)); list($sp711b7d->nl['domains'], $sp711b7d->nl['version_type']) = explode('#', $sp67652f, 2); if (!empty($sp711b7d->nl['domains'])) { $spcf1d61 = array(); foreach (explode(',', $sp711b7d->nl['domains']) as $sp2ab818) { $spcf1d61[] = trim($sp2ab818); } $sp711b7d->nl['domains'] = $spcf1d61; } } else { $sp711b7d->nl['domains'] = array(); $sp711b7d->nl['version_type'] = 'lite'; } return $sp711b7d; } public function setResponseType($sp4d168c) { $this->responseType = $sp4d168c; } public function __destruct() { if ((empty($this->responseType) || $this->responseType == RESPONSE_HTML && self::$validLicense === false) && strpos($_SERVER['REQUEST_URI'], 'backend') === false) { print self::sp49ba63(0); } } private static $freeModules = array('LigPay', 'Rozetka'); private function spfd310e() { if (self::$inited === false) { self::$validLicense = false; $sp007edc = new ServiceLocator(); self::$config = $sp007edc->getService(Config::class); self::$module = $sp007edc->getService(Module::class); self::$smarty = $sp007edc->getService(Smarty::class); self::$response = $sp007edc->getService(Response::class); self::$request = $sp007edc->getService(Request::class); $sp626428 = $this->spec517f(self::$config->license); if (self::sp163eae()) { $this->sp69b130($sp626428->nl['domains']); } self::$response->addHeader(self::sp49ba63(6) . ' ' . self::$config->version . ' ' . $sp626428->nl['version_type']); self::$inited = true; } } private static function sp49ba63($sp45cbf3) { $spd8f02d = ''; if (isset(self::$codes[$sp45cbf3])) { foreach (self::$codes[$sp45cbf3] as $sp49ba63) { $spd8f02d .= chr($sp49ba63); } } return $spd8f02d; } }