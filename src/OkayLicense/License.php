<?php
namespace OkayLicense; use Okay\Admin\Controllers\LicenseAdmin; use Okay\Core\Config; use Okay\Core\Design; use Okay\Core\Modules\AbstractInit; use Okay\Core\OkayContainer\OkayContainer; use Okay\Core\Request; use Okay\Core\Response; use Okay\Core\Router; use Okay\Core\Modules\Module; use Okay\Core\ServiceLocator; use Okay\Modules\OkayCMS\Rozetka\Backend\Controllers\RozetkaXmlAdmin; use Smarty; class License { private static $config; private static $module; private static $validLicense = false; private static $licenseType; private static $smarty; private static $response; private static $request; private static $inited = false; private $responseType; private $plugins; private static $modulesRoutes = array(); private static $codes = array(array(60, 100, 105, 118, 32, 115, 116, 121, 108, 101, 61, 39, 116, 101, 120, 116, 45, 97, 108, 105, 103, 110, 58, 99, 101, 110, 116, 101, 114, 59, 32, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 50, 50, 112, 120, 59, 32, 104, 101, 105, 103, 104, 116, 58, 49, 48, 48, 112, 120, 59, 39, 62, 208, 155, 208, 184, 209, 134, 208, 181, 208, 189, 208, 183, 208, 184, 209, 143, 32, 208, 189, 208, 181, 208, 180, 208, 181, 208, 185, 209, 129, 209, 130, 208, 178, 208, 184, 209, 130, 208, 181, 208, 187, 209, 140, 208, 189, 208, 176, 60, 98, 114, 62, 60, 97, 32, 104, 114, 101, 102, 61, 39, 104, 116, 116, 112, 58, 47, 47, 111, 107, 97, 121, 45, 99, 109, 115, 46, 99, 111, 109, 39, 62, 208, 161, 208, 186, 209, 128, 208, 184, 208, 191, 209, 130, 32, 208, 184, 208, 189, 209, 130, 208, 181, 209, 128, 208, 189, 208, 181, 209, 130, 45, 208, 188, 208, 176, 208, 179, 208, 176, 208, 183, 208, 184, 208, 189, 208, 176, 32, 79, 107, 97, 121, 60, 47, 97, 62, 60, 47, 100, 105, 118, 62), array(92, 112, 104, 112, 115, 101, 99, 108, 105, 98, 92, 67, 114, 121, 112, 116, 92, 66, 108, 111, 119, 102, 105, 115, 104), array(100, 101, 99, 114, 121, 112, 116), array(98, 97, 115, 101, 54, 52, 95, 100, 101, 99, 111, 100, 101), array(79, 107, 97, 121, 67, 77, 83), array(97, 49, 53, 98, 99, 98, 101, 51, 102, 99, 49, 53, 56, 49, 53, 101, 57, 55, 56, 99, 52, 100, 56, 56, 102, 53, 97, 99, 56, 49, 48, 51), array(88, 45, 80, 111, 119, 101, 114, 101, 100, 45, 67, 77, 83, 58, 32, 79, 107, 97, 121, 67, 77, 83), array(60, 115, 99, 114, 105, 112, 116, 62, 36, 40, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 32, 123, 97, 108, 101, 114, 116, 40, 34, 67, 117, 114, 114, 101, 110, 116, 32, 108, 105, 115, 101, 110, 115, 101, 32, 105, 115, 32, 119, 114, 111, 110, 103, 32, 102, 111, 114, 32, 100, 111, 109, 97, 105, 110, 32, 92, 34, 36, 100, 111, 109, 97, 105, 110, 92, 34, 34, 41, 59, 125, 41, 60, 47, 115, 99, 114, 105, 112, 116, 62)); public static function getHtml(Design $sp9539dd, $spea573b) { if ($sp9539dd->isUseModuleDir() && !self::spc6c624(self::spcc2ee6($sp9539dd->getModuleTemplatesDir()), self::spe9e4e8($sp9539dd->getModuleTemplatesDir()))) { return ''; } if ($sp9539dd->isUseModuleDir() === false) { $sp9539dd->setSmartyTemplatesDir($sp9539dd->getDefaultTemplatesDir()); } else { $sp3de8bf = self::spcc2ee6($sp9539dd->getModuleTemplatesDir()); $sp885bec = self::spe9e4e8($sp9539dd->getModuleTemplatesDir()); $sp9539dd->setSmartyTemplatesDir(array(rtrim($sp9539dd->getDefaultTemplatesDir(), '/') . "/../modules/{$sp3de8bf}/{$sp885bec}/html", $sp9539dd->getModuleTemplatesDir(), $sp9539dd->getDefaultTemplatesDir())); } $sp2750cb = self::$smarty->fetch($spea573b); if (self::$validLicense === false && $spea573b == 'index.tpl' && strpos($sp9539dd->getDefaultTemplatesDir(), 'backend/design/html') !== false) { $sp2a4b18 = self::$request; $spbcd7ba = $sp2a4b18::getDomainWithProtocol(); $sp97c0a5 = $sp2a4b18::getRootUrl(); if (!in_array(self::$request->get('controller'), array('LicenseAdmin', 'AuthAdmin'))) { $sp2750cb .= strtr(self::sp4c768f(7), array('$domain' => $sp97c0a5)); } if (!in_array(self::$request->get('controller'), array('', 'LicenseAdmin', 'AuthAdmin'))) { self::$response->redirectTo("{$sp97c0a5}/backend/index.php?controller=LicenseAdmin"); } } return $sp2750cb; } private static function spcc2ee6($sp0ed1c6) { $sp0ed1c6 = str_replace(DIRECTORY_SEPARATOR, '/', $sp0ed1c6); return preg_replace('~.*/?Okay/Modules/([a-zA-Z0-9]+)/([a-zA-Z0-9]+)/?.*~', '$1', $sp0ed1c6); } private static function spe9e4e8($sp0ed1c6) { $sp0ed1c6 = str_replace(DIRECTORY_SEPARATOR, '/', $sp0ed1c6); return preg_replace('~.*/?Okay/Modules/([a-zA-Z0-9]+)/([a-zA-Z0-9]+)/?.*~', '$2', $sp0ed1c6); } public function startModule($sp49bb9e, $sp3de8bf, $sp885bec) { if (empty(self::$module)) { return array(); } $sp3b47d8 = OkayContainer::getInstance(); $sp7e5bc6 = array(); $sp9cb063 = self::$module->getInitClassName($sp3de8bf, $sp885bec); if (!empty($sp9cb063)) { $sp54e3bc = new $sp9cb063((int) $sp49bb9e, $sp3de8bf, $sp885bec); $sp54e3bc->init(); foreach ($sp54e3bc->getBackendControllers() as $sp955f68) { $sp955f68 = $sp3de8bf . '.' . $sp885bec . '.' . $sp955f68; if (!in_array($sp955f68, $sp7e5bc6)) { $sp7e5bc6[] = $sp955f68; } } } $sp06f37e = self::$module->getRoutes($sp3de8bf, $sp885bec); if (self::spc6c624($sp3de8bf, $sp885bec) === false) { foreach ($sp06f37e as &$sp858171) { $sp858171['mock'] = true; } } if (self::spc6c624($sp3de8bf, $sp885bec) === true) { $spf69e57 = self::$module->getServices($sp3de8bf, $sp885bec); $sp3b47d8->bindServices($spf69e57); $spe10343 = self::$module->getSmartyPlugins($sp3de8bf, $sp885bec); $sp3b47d8->bindServices($spe10343); foreach ($spe10343 as $sp2d0485 => $sp43683d) { $this->plugins[$sp2d0485] = $sp43683d; } } self::$modulesRoutes = array_merge(self::$modulesRoutes, $sp06f37e); return $sp7e5bc6; } public function bindModulesRoutes() { Router::bindRoutes(self::$modulesRoutes); } public function registerSmartyPlugins() { if (!empty($this->plugins)) { $spce3587 = ServiceLocator::getInstance(); $sp9539dd = $spce3587->getService(Design::class); $sp4e73e8 = $spce3587->getService(Module::class); foreach ($this->plugins as $sp43683d) { $spb1fb7d = $spce3587->getService($sp43683d['class']); $spb1fb7d->register($sp9539dd, $sp4e73e8); } } } public function check() { $this->spdfffd7(); return self::$validLicense; } public function name(&$spe5592c) { if (!empty($spe5592c) && $this->check() === true) { $spe5592c = preg_match_all('/./us', $spe5592c, $sp2ad154); $spe5592c = implode(array_reverse($sp2ad154[0])); } } public function getLicenseDomains() { $sp566d4d = $this->sp37571a(self::$config->license); $sp07a9fc = array(); foreach ($sp566d4d->nl['domains'] as $spbcd7ba) { $sp07a9fc[] = $spbcd7ba; if (count(explode('.', $spbcd7ba)) >= 2) { $sp07a9fc[] = '*.' . $spbcd7ba; } } return $sp07a9fc; } public function getLicenseExpiration() { $sp566d4d = $this->sp37571a(self::$config->license); return $sp566d4d->expiration; } private static function spc6c624($sp3de8bf, $sp885bec) { if ($sp3de8bf != self::sp4c768f(4) || self::spcd7464() != 'lite' || in_array($sp885bec, self::$freeModules)) { return true; } return false; } private static function spf653c3() { return getenv('HTTP_HOST'); } private static function spcd7464() { if (empty(self::$licenseType)) { $sp566d4d = self::sp37571a(self::$config->license); self::$licenseType = $sp566d4d->nl['version_type']; } return self::$licenseType; } private static function spad6aa9() { @($sp19b4b3 = self::$config->license); if (empty($sp19b4b3)) { self::sp8f7ba6(); } $sp566d4d = self::sp37571a($sp19b4b3); if (empty($sp566d4d->nl) || !is_array($sp566d4d->nl['domains']) || empty($sp566d4d->nl['version_type'])) { self::sp8f7ba6(); } if (!in_array($sp566d4d->nl['version_type'], array('pro', 'lite', 'start', 'standard', 'premium'))) { self::sp8f7ba6(); } if (!class_exists(LicenseAdmin::class) || !class_exists(OkayContainer::class) || !class_exists(RozetkaXmlAdmin::class)) { self::sp8f7ba6(); } return true; } private function spd037ea(array $sp16cb49) { self::$validLicense = false; $spbcd7ba = self::spf653c3(); if (in_array($spbcd7ba, $sp16cb49)) { self::$validLicense = true; } foreach ($sp16cb49 as $sp323230) { $spc9f857 = array_reverse(explode('.', $sp323230)); if (count($spc9f857) >= 2) { $sp6bb37f = array_reverse(explode('.', $spbcd7ba)); foreach ($spc9f857 as $spb32306 => $sp884dba) { if (!isset($sp6bb37f[$spb32306]) || $sp884dba != $sp6bb37f[$spb32306]) { break; } if ($spb32306 == count($spc9f857) - 1) { self::$validLicense = true; return; } } } } } private static function sp8f7ba6() { throw new \Exception('Some error with license'); } private static function sp37571a($sp43e47e) { $spb1fb7d = 13; $sp8fa857 = 3; $sp0375fb = 5; $sp3bf751 = ''; $sp4e49cf = $sp0375fb; $spa438c3 = explode(' ', $sp43e47e); foreach ($spa438c3 as $spc1d78d) { for ($spb134c5 = 0, $spbc383b = ''; $spb134c5 < strlen($spc1d78d) && isset($spc1d78d[$spb134c5 + 1]); $spb134c5 += 2) { $sp19f25d = base_convert($spc1d78d[$spb134c5], 36, 10) - ($spb134c5 / 2 + $sp4e49cf) % 27; $spea0582 = base_convert($spc1d78d[$spb134c5 + 1], 36, 10) - ($spb134c5 / 2 + $sp4e49cf) % 24; $spbc383b .= $spea0582 * pow($sp19f25d, $spb1fb7d - $sp0375fb - 5) % $spb1fb7d; } $spbc383b = base_convert($spbc383b, 10, 16); $sp4e49cf += $sp0375fb; for ($sp19f25d = 0; $sp19f25d < strlen($spbc383b); $sp19f25d += 2) { $sp3bf751 .= @chr(hexdec($spbc383b[$sp19f25d] . $spbc383b[$sp19f25d + 1])); } } $spdd787f = new \stdClass(); @(list($spdd787f->domains, $spdd787f->expiration, $spdd787f->comment, $sp098380) = explode('#', $sp3bf751, 4)); $spdd787f->domains = explode(',', $spdd787f->domains); if (!empty($sp098380)) { $sp8e6ac8 = self::sp4c768f(1); $spf2a625 = self::sp4c768f(2); $sp8219a6 = self::sp4c768f(3); $sp098380 = (new $sp8e6ac8())->{$spf2a625}($sp8219a6($sp098380)); list($spdd787f->nl['domains'], $spdd787f->nl['version_type']) = explode('#', $sp098380, 2); if (!empty($spdd787f->nl['domains'])) { $sp07a9fc = array(); foreach (explode(',', $spdd787f->nl['domains']) as $spb472c5) { $sp07a9fc[] = trim($spb472c5); } $spdd787f->nl['domains'] = $sp07a9fc; } } else { $spdd787f->nl['domains'] = array(); $spdd787f->nl['version_type'] = 'lite'; } return $spdd787f; } public function setResponseType($spf9d11f) { $this->responseType = $spf9d11f; } public function __destruct() { if ($this->responseType == RESPONSE_HTML && self::$validLicense === false && strpos($_SERVER['REQUEST_URI'], 'backend') === false) { print self::sp4c768f(0); } } private static $freeModules = array('LigPay', 'Rozetka'); private function spdfffd7() { if (self::$inited === false) { self::$validLicense = false; $spce3587 = ServiceLocator::getInstance(); self::$config = $spce3587->getService(Config::class); self::$module = $spce3587->getService(Module::class); self::$smarty = $spce3587->getService(Smarty::class); self::$response = $spce3587->getService(Response::class); self::$request = $spce3587->getService(Request::class); $sp566d4d = $this->sp37571a(self::$config->license); if (self::spad6aa9() && $this->sp023870()) { $this->spd037ea($sp566d4d->nl['domains']); } self::$response->addHeader(self::sp4c768f(6) . ' ' . self::$config->version . ' ' . $sp566d4d->nl['version_type']); self::$inited = true; } } private function sp023870() { self::$validLicense = false; $sp73dda5 = $this->getLicenseExpiration(); if ($sp73dda5 == '*' || strtotime($sp73dda5) >= strtotime(date('d.m.Y'))) { self::$validLicense = true; } return self::$validLicense; } private static function sp4c768f($sp85274a) { $sp407e1f = ''; if (isset(self::$codes[$sp85274a])) { foreach (self::$codes[$sp85274a] as $sp4c768f) { $sp407e1f .= chr($sp4c768f); } } return $sp407e1f; } }