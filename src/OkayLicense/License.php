<?php
namespace OkayLicense; use Okay\Admin\Controllers\LicenseAdmin; use Okay\Core\Config; use Okay\Core\Design; use Okay\Core\Modules\AbstractInit; use Okay\Core\OkayContainer\OkayContainer; use Okay\Core\Request; use Okay\Core\Response; use Okay\Core\Router; use Okay\Core\Modules\Module; use Okay\Core\ServiceLocator; use Okay\Modules\OkayCMS\Rozetka\Backend\Controllers\RozetkaXmlAdmin; use Smarty; class License { private static $config; private static $module; private static $validLicense = false; private static $licenseType; private static $smarty; private static $response; private static $request; private static $inited = false; private $responseType; private static $codes = array(array(60, 100, 105, 118, 32, 115, 116, 121, 108, 101, 61, 39, 116, 101, 120, 116, 45, 97, 108, 105, 103, 110, 58, 99, 101, 110, 116, 101, 114, 59, 32, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 50, 50, 112, 120, 59, 32, 104, 101, 105, 103, 104, 116, 58, 49, 48, 48, 112, 120, 59, 39, 62, 208, 155, 208, 184, 209, 134, 208, 181, 208, 189, 208, 183, 208, 184, 209, 143, 32, 208, 189, 208, 181, 208, 180, 208, 181, 208, 185, 209, 129, 209, 130, 208, 178, 208, 184, 209, 130, 208, 181, 208, 187, 209, 140, 208, 189, 208, 176, 60, 98, 114, 62, 60, 97, 32, 104, 114, 101, 102, 61, 39, 104, 116, 116, 112, 58, 47, 47, 111, 107, 97, 121, 45, 99, 109, 115, 46, 99, 111, 109, 39, 62, 208, 161, 208, 186, 209, 128, 208, 184, 208, 191, 209, 130, 32, 208, 184, 208, 189, 209, 130, 208, 181, 209, 128, 208, 189, 208, 181, 209, 130, 45, 208, 188, 208, 176, 208, 179, 208, 176, 208, 183, 208, 184, 208, 189, 208, 176, 32, 79, 107, 97, 121, 60, 47, 97, 62, 60, 47, 100, 105, 118, 62), array(92, 112, 104, 112, 115, 101, 99, 108, 105, 98, 92, 67, 114, 121, 112, 116, 92, 66, 108, 111, 119, 102, 105, 115, 104), array(100, 101, 99, 114, 121, 112, 116), array(98, 97, 115, 101, 54, 52, 95, 100, 101, 99, 111, 100, 101), array(79, 107, 97, 121, 67, 77, 83), array(97, 49, 53, 98, 99, 98, 101, 51, 102, 99, 49, 53, 56, 49, 53, 101, 57, 55, 56, 99, 52, 100, 56, 56, 102, 53, 97, 99, 56, 49, 48, 51), array(88, 45, 80, 111, 119, 101, 114, 101, 100, 45, 67, 77, 83, 58, 32, 79, 107, 97, 121, 67, 77, 83), array(60, 115, 99, 114, 105, 112, 116, 62, 36, 40, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 32, 123, 97, 108, 101, 114, 116, 40, 34, 67, 117, 114, 114, 101, 110, 116, 32, 108, 105, 115, 101, 110, 115, 101, 32, 105, 115, 32, 119, 114, 111, 110, 103, 32, 102, 111, 114, 32, 100, 111, 109, 97, 105, 110, 32, 92, 34, 36, 100, 111, 109, 97, 105, 110, 92, 34, 34, 41, 59, 125, 41, 60, 47, 115, 99, 114, 105, 112, 116, 62)); public static function getHtml(Design $sp436c9a, $sp5a96a7) { if ($sp436c9a->isUseModuleDir() && $sp5a96a7 != 'index.tpl' && !self::spe16727($sp436c9a->getModuleVendor(), $sp436c9a->getModuleName())) { return ''; } if ($sp5a96a7 == 'index.tpl' || $sp436c9a->isUseModuleDir() === false) { $sp436c9a->setSmartyTemplatesDir($sp436c9a->getDefaultTemplatesDir()); } else { $sp19c655 = $sp436c9a->getModuleTemplatesDir(); if (self::spadbe6e($sp436c9a, $sp5a96a7) && ($spdb034b = $sp436c9a->getModuleVendor()) && ($spc727e7 = $sp436c9a->getModuleName())) { $sp19c655 = $sp436c9a->getDefaultTemplatesDir() . "/modules/{$spdb034b}/{$spc727e7}/"; } $sp436c9a->setSmartyTemplatesDir($sp19c655); } $sp81f195 = self::$smarty->fetch($sp5a96a7); if ($sp436c9a->isUseModuleDir() === false) { $sp436c9a->setSmartyTemplatesDir($sp436c9a->getDefaultTemplatesDir()); } else { $sp436c9a->setSmartyTemplatesDir($sp436c9a->getModuleTemplatesDir()); } if (self::$validLicense === false && $sp5a96a7 == 'index.tpl' && strpos($sp436c9a->getDefaultTemplatesDir(), 'backend/design/html') !== false) { $sp75ea53 = self::$request; $sp59c6ca = $sp75ea53::getDomainWithProtocol(); $spa5a613 = $sp75ea53::getRootUrl(); if (!in_array(self::$request->get('controller'), array('LicenseAdmin', 'AuthAdmin'))) { $sp81f195 .= strtr(self::spa3405d(7), array('$domain' => $spa5a613)); } if (!in_array(self::$request->get('controller'), array('', 'LicenseAdmin', 'AuthAdmin'))) { self::$response->redirectTo("{$spa5a613}/backend/index.php?controller=LicenseAdmin"); } } return $sp81f195; } private static function spadbe6e(Design $sp436c9a, $sp5a96a7) { if (($spdb034b = $sp436c9a->getModuleVendor()) && ($spc727e7 = $sp436c9a->getModuleName())) { $spe7d34f = $sp436c9a->getDefaultTemplatesDir() . "/modules/{$spdb034b}/{$spc727e7}/"; if (is_dir($spe7d34f)) { return in_array($sp5a96a7, scandir($spe7d34f)); } } return false; } public function startModule($spf97eb4, $spdb034b, $sp40e7e1) { if (empty(self::$module)) { return array(); } $sp36e677 = OkayContainer::getInstance(); $sp14b48b = array(); $specc095 = self::$module->getInitClassName($spdb034b, $sp40e7e1); if (!empty($specc095)) { $sp35e8e4 = new $specc095((int) $spf97eb4, $spdb034b, $sp40e7e1); $sp35e8e4->init(); foreach ($sp35e8e4->getBackendControllers() as $sp4ad486) { $sp4ad486 = $spdb034b . '.' . $sp40e7e1 . '.' . $sp4ad486; if (!in_array($sp4ad486, $sp14b48b)) { $sp14b48b[] = $sp4ad486; } } } $sp8ef77a = self::$module->getRoutes($spdb034b, $sp40e7e1); if (self::spe16727($spdb034b, $sp40e7e1) === false) { foreach ($sp8ef77a as &$spef5868) { $spef5868['mock'] = true; } } if (self::spe16727($spdb034b, $sp40e7e1) === true) { $sp459d3a = self::$module->getServices($spdb034b, $sp40e7e1); $sp36e677->bindServices($sp459d3a); $sp1ea6b5 = self::$module->getSmartyPlugins($spdb034b, $sp40e7e1); $sp36e677->bindServices($sp1ea6b5); $sp1f4df9 = new ServiceLocator(); $sp436c9a = $sp1f4df9->getService(Design::class); $spc727e7 = $sp1f4df9->getService(Module::class); foreach ($sp1ea6b5 as $sp5a6e3e) { $sp92c8cb = $sp1f4df9->getService($sp5a6e3e['class']); $sp92c8cb->register($sp436c9a, $spc727e7); } } Router::bindRoutes($sp8ef77a); return $sp14b48b; } public function check() { $this->sp3079c7(); return self::$validLicense; } public function name(&$spe11970) { if (!empty($spe11970) && $this->check() === true) { $spe11970 = preg_match_all('/./us', $spe11970, $sp0de447); $spe11970 = implode(array_reverse($sp0de447[0])); } } public function getLicenseDomains() { $sp0d00b0 = $this->sp901e11(self::$config->license); $spb1e569 = array(); foreach ($sp0d00b0->nl['domains'] as $sp59c6ca) { $spb1e569[] = $sp59c6ca; if (count(explode('.', $sp59c6ca)) >= 2) { $spb1e569[] = '*.' . $sp59c6ca; } } return $spb1e569; } public function getLicenseExpiration() { $sp0d00b0 = $this->sp901e11(self::$config->license); return $sp0d00b0->expiration; } private static function spe16727($spdb034b, $sp40e7e1) { if ($spdb034b != self::spa3405d(4) || self::spf1fcb5() == 'pro' || in_array($sp40e7e1, self::$freeModules)) { return true; } return false; } private static function spd3de85() { return getenv('HTTP_HOST'); } private static function spf1fcb5() { if (empty(self::$licenseType)) { $sp0d00b0 = self::sp901e11(self::$config->license); self::$licenseType = $sp0d00b0->nl['version_type']; } return self::$licenseType; } private static function spb839f9() { @($sp91ff55 = self::$config->license); if (empty($sp91ff55)) { self::sp83e7e9(); } $sp0d00b0 = self::sp901e11($sp91ff55); if (empty($sp0d00b0->nl) || !is_array($sp0d00b0->nl['domains']) || empty($sp0d00b0->nl['version_type'])) { self::sp83e7e9(); } if (!in_array($sp0d00b0->nl['version_type'], array('pro', 'lite'))) { self::sp83e7e9(); } if (!class_exists(LicenseAdmin::class) || !class_exists(OkayContainer::class) || !class_exists(RozetkaXmlAdmin::class)) { self::sp83e7e9(); } return true; } private function sp0b02f9(array $spdd19a2) { self::$validLicense = false; $sp59c6ca = self::spd3de85(); if (in_array($sp59c6ca, $spdd19a2)) { self::$validLicense = true; } foreach ($spdd19a2 as $sp6754c5) { $sp5e147c = array_reverse(explode('.', $sp6754c5)); if (count($sp5e147c) >= 2) { $spa3fb7c = array_reverse(explode('.', $sp59c6ca)); foreach ($sp5e147c as $sp34e514 => $sp02cd34) { if (!isset($spa3fb7c[$sp34e514]) || $sp02cd34 != $spa3fb7c[$sp34e514]) { break; } if ($sp34e514 == count($sp5e147c) - 1) { self::$validLicense = true; return; } } } } } private static function sp83e7e9() { throw new \Exception('Some error with license'); } private static function sp901e11($spc1d650) { $sp92c8cb = 13; $speca5da = 3; $sp298d88 = 5; $sp1a0055 = ''; $sp785702 = $sp298d88; $sp484357 = explode(' ', $spc1d650); foreach ($sp484357 as $sp87d94f) { for ($sp35ec6c = 0, $sp2d59d6 = ''; $sp35ec6c < strlen($sp87d94f) && isset($sp87d94f[$sp35ec6c + 1]); $sp35ec6c += 2) { $spdc90a6 = base_convert($sp87d94f[$sp35ec6c], 36, 10) - ($sp35ec6c / 2 + $sp785702) % 27; $sp86be94 = base_convert($sp87d94f[$sp35ec6c + 1], 36, 10) - ($sp35ec6c / 2 + $sp785702) % 24; $sp2d59d6 .= $sp86be94 * pow($spdc90a6, $sp92c8cb - $sp298d88 - 5) % $sp92c8cb; } $sp2d59d6 = base_convert($sp2d59d6, 10, 16); $sp785702 += $sp298d88; for ($spdc90a6 = 0; $spdc90a6 < strlen($sp2d59d6); $spdc90a6 += 2) { $sp1a0055 .= @chr(hexdec($sp2d59d6[$spdc90a6] . $sp2d59d6[$spdc90a6 + 1])); } } $sp45031c = new \stdClass(); @(list($sp45031c->domains, $sp45031c->expiration, $sp45031c->comment, $spd780c2) = explode('#', $sp1a0055, 4)); $sp45031c->domains = explode(',', $sp45031c->domains); if (!empty($spd780c2)) { $spe413b1 = self::spa3405d(1); $sp68c98b = self::spa3405d(2); $sp1cf92f = self::spa3405d(3); $spd780c2 = (new $spe413b1())->{$sp68c98b}($sp1cf92f($spd780c2)); list($sp45031c->nl['domains'], $sp45031c->nl['version_type']) = explode('#', $spd780c2, 2); if (!empty($sp45031c->nl['domains'])) { $spb1e569 = array(); foreach (explode(',', $sp45031c->nl['domains']) as $sp0a255d) { $spb1e569[] = trim($sp0a255d); } $sp45031c->nl['domains'] = $spb1e569; } } else { $sp45031c->nl['domains'] = array(); $sp45031c->nl['version_type'] = 'lite'; } return $sp45031c; } public function setResponseType($spcbfb6a) { $this->responseType = $spcbfb6a; } public function __destruct() { if ($this->responseType == RESPONSE_HTML && self::$validLicense === false && strpos($_SERVER['REQUEST_URI'], 'backend') === false) { print self::spa3405d(0); } } private static $freeModules = array('LigPay', 'Rozetka'); private function sp3079c7() { if (self::$inited === false) { self::$validLicense = false; $sp1f4df9 = new ServiceLocator(); self::$config = $sp1f4df9->getService(Config::class); self::$module = $sp1f4df9->getService(Module::class); self::$smarty = $sp1f4df9->getService(Smarty::class); self::$response = $sp1f4df9->getService(Response::class); self::$request = $sp1f4df9->getService(Request::class); $sp0d00b0 = $this->sp901e11(self::$config->license); if (self::spb839f9()) { $this->sp0b02f9($sp0d00b0->nl['domains']); } self::$response->addHeader(self::spa3405d(6) . ' ' . self::$config->version . ' ' . $sp0d00b0->nl['version_type']); self::$inited = true; } } private static function spa3405d($spc8bfef) { $spf01892 = ''; if (isset(self::$codes[$spc8bfef])) { foreach (self::$codes[$spc8bfef] as $spa3405d) { $spf01892 .= chr($spa3405d); } } return $spf01892; } }