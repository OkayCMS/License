<?php
namespace OkayLicense; use Okay\Admin\Controllers\LicenseAdmin; use Okay\Core\Config; use Okay\Core\Design; use Okay\Core\Modules\AbstractInit; use Okay\Core\OkayContainer\OkayContainer; use Okay\Core\Request; use Okay\Core\Response; use Okay\Core\Router; use Okay\Core\Modules\Module; use Okay\Core\ServiceLocator; use Okay\Modules\OkayCMS\Rozetka\Backend\Controllers\RozetkaXmlAdmin; use Smarty; class License { private static $config; private static $module; private static $validLicense = false; private static $licenseType; private static $smarty; private static $response; private static $request; private static $inited = false; private $responseType; private static $codes = array(array(60, 100, 105, 118, 32, 115, 116, 121, 108, 101, 61, 39, 116, 101, 120, 116, 45, 97, 108, 105, 103, 110, 58, 99, 101, 110, 116, 101, 114, 59, 32, 102, 111, 110, 116, 45, 115, 105, 122, 101, 58, 50, 50, 112, 120, 59, 32, 104, 101, 105, 103, 104, 116, 58, 49, 48, 48, 112, 120, 59, 39, 62, 208, 155, 208, 184, 209, 134, 208, 181, 208, 189, 208, 183, 208, 184, 209, 143, 32, 208, 189, 208, 181, 208, 180, 208, 181, 208, 185, 209, 129, 209, 130, 208, 178, 208, 184, 209, 130, 208, 181, 208, 187, 209, 140, 208, 189, 208, 176, 60, 98, 114, 62, 60, 97, 32, 104, 114, 101, 102, 61, 39, 104, 116, 116, 112, 58, 47, 47, 111, 107, 97, 121, 45, 99, 109, 115, 46, 99, 111, 109, 39, 62, 208, 161, 208, 186, 209, 128, 208, 184, 208, 191, 209, 130, 32, 208, 184, 208, 189, 209, 130, 208, 181, 209, 128, 208, 189, 208, 181, 209, 130, 45, 208, 188, 208, 176, 208, 179, 208, 176, 208, 183, 208, 184, 208, 189, 208, 176, 32, 79, 107, 97, 121, 60, 47, 97, 62, 60, 47, 100, 105, 118, 62), array(92, 112, 104, 112, 115, 101, 99, 108, 105, 98, 92, 67, 114, 121, 112, 116, 92, 66, 108, 111, 119, 102, 105, 115, 104), array(100, 101, 99, 114, 121, 112, 116), array(98, 97, 115, 101, 54, 52, 95, 100, 101, 99, 111, 100, 101), array(79, 107, 97, 121, 67, 77, 83), array(97, 49, 53, 98, 99, 98, 101, 51, 102, 99, 49, 53, 56, 49, 53, 101, 57, 55, 56, 99, 52, 100, 56, 56, 102, 53, 97, 99, 56, 49, 48, 51), array(88, 45, 80, 111, 119, 101, 114, 101, 100, 45, 67, 77, 83, 58, 32, 79, 107, 97, 121, 67, 77, 83), array(60, 115, 99, 114, 105, 112, 116, 62, 36, 40, 102, 117, 110, 99, 116, 105, 111, 110, 40, 41, 32, 123, 97, 108, 101, 114, 116, 40, 34, 67, 117, 114, 114, 101, 110, 116, 32, 108, 105, 115, 101, 110, 115, 101, 32, 105, 115, 32, 119, 114, 111, 110, 103, 32, 102, 111, 114, 32, 100, 111, 109, 97, 105, 110, 32, 92, 34, 36, 100, 111, 109, 97, 105, 110, 92, 34, 34, 41, 59, 125, 41, 60, 47, 115, 99, 114, 105, 112, 116, 62)); public static function getHtml(Design $spe620e9, $sp3d6bd2) { if ($spe620e9->isUseModuleDir() && $sp3d6bd2 != 'index.tpl' && !self::spcbb577($spe620e9->getModuleVendor(), $spe620e9->getModuleName())) { return ''; } if ($sp3d6bd2 == 'index.tpl' || $spe620e9->isUseModuleDir() === false) { $spe620e9->setSmartyTemplatesDir($spe620e9->getDefaultTemplatesDir()); } else { $spd32adf = $spe620e9->getModuleTemplatesDir(); if (self::spebd46a($spe620e9, $sp3d6bd2) && ($sp07c0b1 = $spe620e9->getModuleVendor()) && ($spa5c3f5 = $spe620e9->getModuleName())) { $spd32adf = $spe620e9->getDefaultTemplatesDir() . "/modules/{$sp07c0b1}/{$spa5c3f5}/"; } $spe620e9->setSmartyTemplatesDir($spd32adf); } $sp1ecab3 = self::$smarty->fetch($sp3d6bd2); if ($spe620e9->isUseModuleDir() === false) { $spe620e9->setSmartyTemplatesDir($spe620e9->getDefaultTemplatesDir()); } else { $spe620e9->setSmartyTemplatesDir($spe620e9->getModuleTemplatesDir()); } if (self::$validLicense === false && $sp3d6bd2 == 'index.tpl' && strpos($spe620e9->getDefaultTemplatesDir(), 'backend/design/html') !== false) { $spdf35d2 = self::$request; $sp8dd02a = $spdf35d2::getDomainWithProtocol(); $sp10fc0b = $spdf35d2::getRootUrl(); if (!in_array(self::$request->get('controller'), array('LicenseAdmin', 'AuthAdmin'))) { $sp1ecab3 .= strtr(self::spb4cc46(7), array('$domain' => $sp10fc0b)); } if (!in_array(self::$request->get('controller'), array('', 'LicenseAdmin', 'AuthAdmin'))) { self::$response->redirectTo("{$sp10fc0b}/backend/index.php?controller=LicenseAdmin"); } } return $sp1ecab3; } private static function spebd46a(Design $spe620e9, $sp3d6bd2) { if (($sp07c0b1 = $spe620e9->getModuleVendor()) && ($spa5c3f5 = $spe620e9->getModuleName())) { $sp67f4a1 = $spe620e9->getDefaultTemplatesDir() . "/modules/{$sp07c0b1}/{$spa5c3f5}/"; if (is_dir($sp67f4a1)) { return in_array($sp3d6bd2, scandir($sp67f4a1)); } } return false; } public function startModule($sp4cb889, $sp07c0b1, $sp62784c) { if (empty(self::$module)) { return array(); } $sp1bdc7c = OkayContainer::getInstance(); $spb7feb9 = array(); $spbfc7fa = self::$module->getInitClassName($sp07c0b1, $sp62784c); if (!empty($spbfc7fa)) { $spa4e68a = new $spbfc7fa((int) $sp4cb889, $sp07c0b1, $sp62784c); $spa4e68a->init(); foreach ($spa4e68a->getBackendControllers() as $sp97f894) { $sp97f894 = $sp07c0b1 . '.' . $sp62784c . '.' . $sp97f894; if (!in_array($sp97f894, $spb7feb9)) { $spb7feb9[] = $sp97f894; } } } $spab0115 = self::$module->getRoutes($sp07c0b1, $sp62784c); if (self::spcbb577($sp07c0b1, $sp62784c) === false) { foreach ($spab0115 as &$spcdf683) { $spcdf683['mock'] = true; } } if (self::spcbb577($sp07c0b1, $sp62784c) === true) { $sp0ca70e = self::$module->getServices($sp07c0b1, $sp62784c); $sp1bdc7c->bindServices($sp0ca70e); } Router::bindRoutes($spab0115); return $spb7feb9; } public function check() { $this->spbd8097(); return self::$validLicense; } public function name(&$sp0210ec) { if (!empty($sp0210ec) && $this->check() === true) { $sp0210ec = preg_match_all('/./us', $sp0210ec, $sp77d9b9); $sp0210ec = implode(array_reverse($sp77d9b9[0])); } } public function getLicenseDomains() { $sp1baa54 = $this->spcec896(self::$config->license); $spb2d139 = array(); foreach ($sp1baa54->nl['domains'] as $sp8dd02a) { $spb2d139[] = $sp8dd02a; if (count(explode('.', $sp8dd02a)) >= 2) { $spb2d139[] = '*.' . $sp8dd02a; } } return $spb2d139; } public function getLicenseExpiration() { $sp1baa54 = $this->spcec896(self::$config->license); return $sp1baa54->expiration; } private static function spcbb577($sp07c0b1, $sp62784c) { if ($sp07c0b1 != self::spb4cc46(4) || self::spa2e661() == 'pro' || in_array($sp62784c, self::$freeModules)) { return true; } return false; } private static function sp134c23() { return getenv('HTTP_HOST'); } private static function spa2e661() { if (empty(self::$licenseType)) { $sp1baa54 = self::spcec896(self::$config->license); self::$licenseType = $sp1baa54->nl['version_type']; } return self::$licenseType; } private static function sp5b28ef() { @($spb796ca = self::$config->license); if (empty($spb796ca)) { self::sp4087e1(); } $sp1baa54 = self::spcec896($spb796ca); if (empty($sp1baa54->nl) || !is_array($sp1baa54->nl['domains']) || empty($sp1baa54->nl['version_type'])) { self::sp4087e1(); } if (!in_array($sp1baa54->nl['version_type'], array('pro', 'lite'))) { self::sp4087e1(); } if (!class_exists(LicenseAdmin::class) || !class_exists(OkayContainer::class) || !class_exists(RozetkaXmlAdmin::class)) { self::sp4087e1(); } return true; } private function sp2a26bb(array $sp9d76f6) { self::$validLicense = false; $sp8dd02a = self::sp134c23(); if (in_array($sp8dd02a, $sp9d76f6)) { self::$validLicense = true; } foreach ($sp9d76f6 as $spd9a819) { $sp0d1b28 = array_reverse(explode('.', $spd9a819)); if (count($sp0d1b28) >= 2) { $spb1a71b = array_reverse(explode('.', $sp8dd02a)); foreach ($sp0d1b28 as $sp29cbea => $sp4f96ec) { if (!isset($spb1a71b[$sp29cbea]) || $sp4f96ec != $spb1a71b[$sp29cbea]) { break; } if ($sp29cbea == count($sp0d1b28) - 1) { self::$validLicense = true; return; } } } } } private static function sp4087e1() { throw new \Exception('Some error with license'); } private static function spcec896($sp5efd86) { $sp696d3a = 13; $sp2818ca = 3; $sp1c5643 = 5; $spf54e83 = ''; $speebd66 = $sp1c5643; $sp04b5c5 = explode(' ', $sp5efd86); foreach ($sp04b5c5 as $sp95a40d) { for ($spe418fd = 0, $sp3b5171 = ''; $spe418fd < strlen($sp95a40d) && isset($sp95a40d[$spe418fd + 1]); $spe418fd += 2) { $spf5f650 = base_convert($sp95a40d[$spe418fd], 36, 10) - ($spe418fd / 2 + $speebd66) % 27; $sp8a1abf = base_convert($sp95a40d[$spe418fd + 1], 36, 10) - ($spe418fd / 2 + $speebd66) % 24; $sp3b5171 .= $sp8a1abf * pow($spf5f650, $sp696d3a - $sp1c5643 - 5) % $sp696d3a; } $sp3b5171 = base_convert($sp3b5171, 10, 16); $speebd66 += $sp1c5643; for ($spf5f650 = 0; $spf5f650 < strlen($sp3b5171); $spf5f650 += 2) { $spf54e83 .= @chr(hexdec($sp3b5171[$spf5f650] . $sp3b5171[$spf5f650 + 1])); } } $sp44295a = new \stdClass(); @(list($sp44295a->domains, $sp44295a->expiration, $sp44295a->comment, $spd3f939) = explode('#', $spf54e83, 4)); $sp44295a->domains = explode(',', $sp44295a->domains); if (!empty($spd3f939)) { $sp035940 = self::spb4cc46(1); $sp9d4c40 = self::spb4cc46(2); $sp427779 = self::spb4cc46(3); $spd3f939 = (new $sp035940())->{$sp9d4c40}($sp427779($spd3f939)); list($sp44295a->nl['domains'], $sp44295a->nl['version_type']) = explode('#', $spd3f939, 2); if (!empty($sp44295a->nl['domains'])) { $spb2d139 = array(); foreach (explode(',', $sp44295a->nl['domains']) as $spd90545) { $spb2d139[] = trim($spd90545); } $sp44295a->nl['domains'] = $spb2d139; } } return $sp44295a; } public function setResponseType($sp666e5e) { $this->responseType = $sp666e5e; } public function __destruct() { if (empty($this->responseType) || $this->responseType == RESPONSE_HTML && self::$validLicense === false) { print self::spb4cc46(0); } } private static $freeModules = array('LigPay', 'Rozetka'); private function spbd8097() { if (self::$inited === false) { self::$validLicense = false; $sp652a8e = new ServiceLocator(); self::$config = $sp652a8e->getService(Config::class); self::$module = $sp652a8e->getService(Module::class); self::$smarty = $sp652a8e->getService(Smarty::class); self::$response = $sp652a8e->getService(Response::class); self::$request = $sp652a8e->getService(Request::class); $sp1baa54 = $this->spcec896(self::$config->license); if (self::sp5b28ef()) { $this->sp2a26bb($sp1baa54->nl['domains']); } self::$response->addHeader(self::spb4cc46(6) . ' ' . self::$config->version . ' ' . $sp1baa54->nl['version_type']); self::$inited = true; } } private static function spb4cc46($spd599cb) { $sp2449dc = ''; if (isset(self::$codes[$spd599cb])) { foreach (self::$codes[$spd599cb] as $spb4cc46) { $sp2449dc .= chr($spb4cc46); } } return $sp2449dc; } }